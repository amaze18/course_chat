{"docstore/data": {"2f41385a-417d-4f5f-812b-b2c17c741bd0": {"__data__": {"id_": "2f41385a-417d-4f5f-812b-b2c17c741bd0", "embedding": null, "metadata": {"page_label": "1", "file_name": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_path": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_type": "application/pdf", "file_size": 153191, "creation_date": "2024-03-23", "last_modified_date": "2024-03-23", "entities": ["C++"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "cee58f44-8d9e-4b33-a1a5-53ce13f26622", "node_type": "4", "metadata": {"page_label": "1", "file_name": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_path": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_type": "application/pdf", "file_size": 153191, "creation_date": "2024-03-23", "last_modified_date": "2024-03-23"}, "hash": "59968b2822f939ee730db7007b066bf938f89c02f2e2b4e7e5e334a87c77a14a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "b8300ac2-dae3-4f28-99b3-0087417e1bdb", "node_type": "1", "metadata": {}, "hash": "1a6d8e2f64e449ea5cfb01a814267463c2d8dfbcb7aeaf249d26a1ae7a2f88e2", "class_name": "RelatedNodeInfo"}}, "text": "Course No:  \n202 Course Name:  \nDATA AND FILE STRUCTURES  Credits  \nL: 2 T: 1 P: 2 Total: 5 \nObjective:   \nThe course is designed with an objective to  \n\uf0d8 Explain linear and non -linear data structures and its applications.  \n\uf0d8 Demonstrate the sorting and searching techniques and its efficiencies . \n\uf0d8 Illustrate various algorithm design  techniques.  \n\uf0d8 Implementing  data structure  techniques using C++ programs.  \n\uf0d8 Explain various file structures and their utilities.  \n \nPrerequisite:  \nBasic knowledge of coding . \nLearning Outcome s: \nOn completion of  the course, students will be able to:  \n\uf0d8 Apply and analyze the concept of time, space complexity of an algorithm.  \n\uf0d8 Identify well -known generic data structures su ch as stack, queue, tree  and related algorithms and apply \nthem to solve problems.  \n\uf0d8 Design data structures and algorithms to solve problems.  \n\uf0d8 Comprehend the concept of file structures.  \n\uf0d8 Implement selected data structures and searching/sorting algorithms Using C++ language.  \n \nPART A:Theory(TH:202)  \nTotal Marks: 100  \n( In Semester Evaluation \u201340 & End Semester Evaluation \u201360) \n \nUnit 1: Fundamental Notions:                                  Marks 12  \nPrimitive and composite data types, Time and Space Complexity of Algorithms, Concept of Big -O, small -o & \nBig-\uf057. \n \nUnit 2: Linear Data Structure:                                  Marks 12  \n Stacks, Queues, Ar rays, Linked Lists, Circular & Doubly Linked Lists.  \n \nUnit 3: Trees                                   Marks 12  \nIntroduction to Trees, Properties of Trees, Pedant vertices in a Tree,  Center of a Tree,  Rooted Binary Trees, \nConcepts of Trees, Extended Binary Trees, Complete Binary Trees, General Trees, Binary Search Trees, \nWeight balanced and Height balanced Trees, AVL Tree, Balanced Multi -Way Trees, Threaded Binary Trees.  \n \nUnit 4: File Structures:                                    Marks 12  \nConcepts of Fields, Records and Files, Concepts of Blocks, Clusters, Sectors. Sequential File Organization, \nVariable length Records and Text Files, Indexing Structures like B -trees, ISAM, Hashing Techniques for \nDirect F iles, Inverted lists, Multilists.  \n \nUnit 5: Sorting and Searching:                               Marks 12  \nSelection -sort, Insertion -sort, Bubble -sort, Quick -sort, Heap -sort, Merge -sort. Searching Techniques; Binary \nsearch, Linear search.", "start_char_idx": 0, "end_char_idx": 2388, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "b8300ac2-dae3-4f28-99b3-0087417e1bdb": {"__data__": {"id_": "b8300ac2-dae3-4f28-99b3-0087417e1bdb", "embedding": null, "metadata": {"page_label": "2", "file_name": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_path": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_type": "application/pdf", "file_size": 153191, "creation_date": "2024-03-23", "last_modified_date": "2024-03-23", "entities": ["Rai Publication", "Pearson Education", "Weiss", "Tata McGraw Hill"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a6ab324b-b5c6-4509-946b-8bfadf00e2bc", "node_type": "4", "metadata": {"page_label": "2", "file_name": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_path": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_type": "application/pdf", "file_size": 153191, "creation_date": "2024-03-23", "last_modified_date": "2024-03-23"}, "hash": "327e3be7a133134174306028122179f4867f792a55f90aea1bf21c3910670115", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "2f41385a-417d-4f5f-812b-b2c17c741bd0", "node_type": "1", "metadata": {"page_label": "1", "file_name": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_path": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_type": "application/pdf", "file_size": 153191, "creation_date": "2024-03-23", "last_modified_date": "2024-03-23"}, "hash": "5424197fde09e4ca8812432587afe7cdfcc5c689e9257b6599840e3d068d9c56", "class_name": "RelatedNodeInfo"}}, "text": "PART B: Practical(PR:202)  \nTotal Marks: 50  \n( In Semester Evaluation \u201320 & End Semester Evaluation \u201330) \n \nC++ Programs covering:  \n\uf0d8 Stack, Queue and Linked List operations  \n\uf0d8 Tree operations  \n\uf0d8 Implementation of Searching and Sorting techniques . \n \nText Books:  \n1.  Seymour L,\u201d  Data Structures \u201d, Tata McGraw Hill, Reprint , 2012  . \n2.  Baluja  G.S., \u201c Data Structure Through C++ \u201d, Dhanp at Rai Publication, Reprint , 2012  . \n \nReference Books : \n1. Weiss, \u201c Data Structures  and Algorithm Analysis in C ++\u201d, Pearson Education,  2012.  \n2. Cormen , Leiserson ,Rivest, \u201c Introduction to Algorithms \u201d, Mil Press & McGraw - Hill Publication ,2012", "start_char_idx": 0, "end_char_idx": 655, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"2f41385a-417d-4f5f-812b-b2c17c741bd0": {"doc_hash": "75875b683b22ce40e70e5150805964e446cb7ce65ea2e3c1cf89003081ec0563", "ref_doc_id": "cee58f44-8d9e-4b33-a1a5-53ce13f26622"}, "b8300ac2-dae3-4f28-99b3-0087417e1bdb": {"doc_hash": "43b5be2fb97e7254f67565feaeea92bacfe8940ab9e1680cdd5dc97767c42574", "ref_doc_id": "a6ab324b-b5c6-4509-946b-8bfadf00e2bc"}}, "docstore/ref_doc_info": {"cee58f44-8d9e-4b33-a1a5-53ce13f26622": {"node_ids": ["2f41385a-417d-4f5f-812b-b2c17c741bd0"], "metadata": {"page_label": "1", "file_name": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_path": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_type": "application/pdf", "file_size": 153191, "creation_date": "2024-03-23", "last_modified_date": "2024-03-23", "entities": ["C++"]}}, "a6ab324b-b5c6-4509-946b-8bfadf00e2bc": {"node_ids": ["b8300ac2-dae3-4f28-99b3-0087417e1bdb"], "metadata": {"page_label": "2", "file_name": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_path": "/home/ubuntu/Data_Strctures/MCA 202 DFS.pdf", "file_type": "application/pdf", "file_size": 153191, "creation_date": "2024-03-23", "last_modified_date": "2024-03-23", "entities": ["Rai Publication", "Pearson Education", "Weiss", "Tata McGraw Hill"]}}}}