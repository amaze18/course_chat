{"docstore/data": {"8d83a592-1e20-4d06-aeed-021774e0c3c1": {"__data__": {"id_": "8d83a592-1e20-4d06-aeed-021774e0c3c1", "embedding": null, "metadata": {"page_label": "1", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26", "entities": ["IMDEA Networks Institute Madrid", "Visible Light Communication Systems", "Spain"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eb62c087-6ef0-4964-a177-1a76ca8983ac", "node_type": "4", "metadata": {"page_label": "1", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "72f5967f96eb30f3baa080cde6ad3dae6af7fd7a2c29e60a935559002c32f61f", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "fd8fb939-c39c-4415-8f65-27acc70f0e06", "node_type": "1", "metadata": {}, "hash": "b64b7ca8d2f2eed74967c7c555aa307a6d7719e8a958376f08257354e4bd1adb", "class_name": "RelatedNodeInfo"}}, "text": "Research in Visible Light Communication Systems\nwith OpenVLC1.3\nAnder Galisteo\nIMDEA Networks Institute &\nUniversidad Carlos III de Madrid\nMadrid, Spain\nander.galisteo@imdea.orgDiego Juara\nIMDEA Networks Institute\nMadrid, Spain\ndiego.juara@imdea.orgDomenico Giustiniano\nIMDEA Networks Institute\nMadrid, Spain\ndomenico.giustiniano@imdea.org\nAbstract \u2014In this paper, we present the design and implemen-\ntation of our latest OpenVLC1.3 platform to perform research in\nVisible Light Communication Systems. We retain the advantages\nof the previous versions such as TCP/IP layers support, soft-\nware programmability and low-cost front-end. We re-design the\ntransceiver to support higher modulation rates and sensitivity.\nThis allows us to reach a throughput of 400 kb/s (a factor of 4\nwith respect to the previous version) and increase the distance\nby a factor of 3.5. We further improve the software robustness\nof the system and reduce the form factor at similar hardware\ncost.\nI. I NTRODUCTION\nVisible Light Communication is gaining signi\ufb01cant interest\nas a medium to connect to the Internet [1]\u2013[3]. In the last few\nyears, a range of applications have been developed with low-\nend Visible Light Communication (VLC) platforms: human\nsensing [4], communication with toys [5], mobile interac-\ntion [6], indoor localization [7], [8] and passive VLC [9], [10].\nIndustry interest is also resulting in the establishment of the\nIEEE 802.11bb task group, where the objective is to amend the\nMedium Access Control (MAC) and Physical Layer (PHY) of\nIEEE 802.11 with Light Communications [11].\nTo solve the lack of an open-source and \ufb02exible platform\nfor low-end VLC research, we introduced OpenVLC at the\nVLCS\u201914 workshop [12], that allowed for quick and \ufb02ex-\nible testing of new VLC protocols and applications. More\nrecently, we introduced OpenVLC1.2 [13] with the attempt of\nincreasing the data rate. However, the board was still working\nonly at relative short range and was largely affected by light\ninterference.\nIn this paper, we introduce the latest version of our platform,\nOpenVLC1.3, that increases the data rate and the communica-\ntion range without adding any hardware cost to the platform.\nOur contributions are as follows:\n\u2022We make a design that occupies a smaller physical space,\nimprove the hardware of OpenVLC1.3 and add high-pass\nand low-pass \ufb01lters to minimize the effect of noise in\nthe system, including the Direct Current (DC) from other\nThe project that gave rise to these results received the support of a\nfellowship from \u201dla Caixa\u201d Foundation (ID 100010434). The fellowship code\nis LCF/BQ/ES16/11570019.\nFig. 1: OpenVLC1.3 cape on top of an embedded board.\nillumination sources and high-frequency components from\nthe circuitry such as the overshooting generated by the\nampli\ufb01cation stages.\n\u2022We improve the software stability and make a new design\nin software to modulate the LED light. This allows us to\nperform sampling rate over 2 MHz and achieve a UDP\nthroughput of about 400 kb/s. This throughput could ful\ufb01ll\nthe needs of a range of applications with only off-the-shelf\nlow-end hardware.\n\u2022We design a new technique for computation- and memory-\nlimited fast frame detection to solve the problem of con-\nstrained memory in the microcontroller.\n\u2022We design and implement a new reception mechanism\nto avoid the synchronization problems present in previous\nversions of OpenVLC.\nThe rest of this paper is organized as follows. Section II\nintroduces the background on OpenVLC and a high level view\nof the system architecture. Details on the design of hardware,\n\ufb01rmware and driver for the transmitter (TX) and receiver (RX)\nare presented in Section III and Section IV, respectively. The\nevaluation results are reported in Section V and the limits\nof the OpenVLC1.3 in Section VI. Finally, discussions and\nconclusion are drawn in Section VII.\nII.", "start_char_idx": 0, "end_char_idx": 3851, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "fd8fb939-c39c-4415-8f65-27acc70f0e06": {"__data__": {"id_": "fd8fb939-c39c-4415-8f65-27acc70f0e06", "embedding": null, "metadata": {"page_label": "1", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26", "entities": ["BeagleBone Black"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "eb62c087-6ef0-4964-a177-1a76ca8983ac", "node_type": "4", "metadata": {"page_label": "1", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "72f5967f96eb30f3baa080cde6ad3dae6af7fd7a2c29e60a935559002c32f61f", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "8d83a592-1e20-4d06-aeed-021774e0c3c1", "node_type": "1", "metadata": {"page_label": "1", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "c88924ced037516cfa2353cdf00fb995fbac663b20590b69cad17e2901c5851c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3def7107-83d9-4bf2-abc7-357bb05b18d1", "node_type": "1", "metadata": {}, "hash": "546de6bbf383ce1325b33b5b710135ca4df56ab0496e042323b00ee699cf0e30", "class_name": "RelatedNodeInfo"}}, "text": "Section II\nintroduces the background on OpenVLC and a high level view\nof the system architecture. Details on the design of hardware,\n\ufb01rmware and driver for the transmitter (TX) and receiver (RX)\nare presented in Section III and Section IV, respectively. The\nevaluation results are reported in Section V and the limits\nof the OpenVLC1.3 in Section VI. Finally, discussions and\nconclusion are drawn in Section VII.\nII. N EWSYSTEM ARCHITECTURE\nThe new version of OpenVLC consist of four parts: the\nBeagleBone Black (BBB) embedded board [14], the OpenVLC\ncape, the OpenVLC \ufb01rmware and the OpenVLC driver. The\nOpenVLC cape is the front-end transceiver that is attached\ndirectly to the BBB. The OpenVLC \ufb01rmware uses real- 978-1-5386-4980-0/19/$31.00 2019 IEEEarXiv:1812.06788v2  [cs.NI]  5 Mar 2019", "start_char_idx": 3435, "end_char_idx": 4227, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3def7107-83d9-4bf2-abc7-357bb05b18d1": {"__data__": {"id_": "3def7107-83d9-4bf2-abc7-357bb05b18d1", "embedding": null, "metadata": {"page_label": "2", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26", "entities": ["High Power LED Kernel"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "476df8c0-b694-4ffe-a394-9089b165ac70", "node_type": "4", "metadata": {"page_label": "2", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "312319889568eba01f4bd6b404b42033ed4e802ed0516c1da2e12385a7141ad2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "fd8fb939-c39c-4415-8f65-27acc70f0e06", "node_type": "1", "metadata": {"page_label": "1", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "33f1142a21c9a2744c352f208d5c5f297947811a4dc02a2a773bd9d0e315b2e0", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "3aee0895-63f9-439c-adbc-2ec859adc06c", "node_type": "1", "metadata": {}, "hash": "e5bbe8b1a7f23525b8087a5bbaa5b65ea3cb2660a7214dc3feb516776a1a9c40", "class_name": "RelatedNodeInfo"}}, "text": "TABLE I: Comparison between OpenVLC versions.\nTX HW TX SW RX HW RX SW Data rate\nOpenVLC1.0 High Power LED Kernel software Basic components Running in Kernel 18kb/s\nOpenVLC1.2Support for higher power\nLED and faster modulationFirmware with user space\nconnectionFaster PD and\nexternal ampli\ufb01erNew frame detection and\nfaster reception in \ufb01rmware100kb/s\nOpenVLC1.3More powerful LED\nand external powerFaster \ufb01rmware and\ndirect connection to KernelFilters to remove interferences\nand reduced cape sizeNew frame and\nsymbol detection400kb/s\nApplicationlayer\nTransport layer\nNetwork layer\nVLC MAC\nNon-time \nsensitiveVLC PHYTCA\nTIATime sensitive\nVLC PHY\nKernelSpaceUserSpace\nHardware Software\nOpenVLC Driver\nPRULED\nPD\nFig. 2: The diagram of OpenVLC1.3.\ntime processing in the BBB\u2019s Processing Real-time Units\n(PRUs), that work as microprocessors. The OpenVLC driver\nis a module in the Linux kernel. Both the \ufb01rmware and the\nkernel module implement the VLC MAC and PHY layers\nand implement primitives such as sampling, symbol detection,\ncoding/decoding and Internet protocol interoperability. Also,\nOpenVLC1.3 retains the best characteristics of previous ver-\nsions, being \ufb02exible and open-source and communicating with\na low-cost front-end.\nWith respect to its predecessor, the architecture of Open-\nVLC1.3 has been re-designed in order to increase the network\nperformance. The new hardware (HW), called OpenVLC1.3\ncape, is shown in Fig. 1. The OpenVLC1.3 cape has been\nmodi\ufb01ed, reducing its surface by more than 50%. This also\nallows to use the remaining pins to connect sensors, for\ninstance for Internet of Things applications.\nThe system architecture of OpenVLC1.3 is shown in Fig. 2.\nThe hardware runs on external power to allow higher power\nconsumptions and harnesses the new LED and Photodiode\n(PD), together with ancillary circuits, to transmit and receive\nvisible light signals, respectively. The software is responsible\nfor modulating the LED light in order to transmit and sample\nthe incoming signals to receive, both implemented in the\nOpenVLC1.3 \ufb01rmware. The software also implements the\nMAC layer and part of PHY layer in the OpenVLC1.3 driver.\nThere are three main differences in the design comparing\nOpenVLC1.3 to its predecessors:\n\u2022A new design of the OpenVLC cape (hardware).\n\u2022A new system architecture (both in software and hardware).\n\u2022A \ufb01rmware implemented in the PRUs for data transmission\nas well as frame and symbol detection (software).\nTo boost the date rate in OpenVLC1.3, we exploit the\nPRUs of the BBB. Time-sensitive operations are implemented\nin the 2 PRUs that control the General Purpose Input-\nOutput (GPIO) to modulate LED light and perform sampling\nof incoming signals. This separation was also proposed in\nOpenVLC1.2, but resulted in overall lower performance andrequired some module in user space. Communication between\nthe driver and the \ufb01rmware is now performed using a shared\nmemory. A new technique for computation- and memory-\nlimited frame detection also resides in the \ufb01rmware (the details\nare presented in Sec. IV). The OpenVLC driver implements\nthe MAC protocol and non-time sensitive PHY operations.\nThis maintains the advantages of software-based \ufb02exibility and\nprogrammability while increasing its performance.\nOpenVLC1.3 is already available to the research commu-\nnity1. A summary of the improvements of each version can\nbe found in Tab. I.\nA. Data exchange\nThe data stream is received in the driver from upper layers.\nThe VLC frame is prepared and then the symbol stream is sent\nto the shared memory from where it is read by the \ufb01rmware in\nthe PRU, as seen in Fig. 2. The PRU then controls the GPIOs\nto modulate the LED light for data transmission.\nAt the receiver, light signals are detected by the PD and\nsampled by the \ufb01rmware in the PRUs. Once a valid preamble\nand Start-Frame-Delimiter (SFD) are detected, received data\nis sent to the shared memory, and then received and processed\nby the OpenVLC driver.", "start_char_idx": 0, "end_char_idx": 3950, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "3aee0895-63f9-439c-adbc-2ec859adc06c": {"__data__": {"id_": "3aee0895-63f9-439c-adbc-2ec859adc06c", "embedding": null, "metadata": {"page_label": "2", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "476df8c0-b694-4ffe-a394-9089b165ac70", "node_type": "4", "metadata": {"page_label": "2", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "312319889568eba01f4bd6b404b42033ed4e802ed0516c1da2e12385a7141ad2", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3def7107-83d9-4bf2-abc7-357bb05b18d1", "node_type": "1", "metadata": {"page_label": "2", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "56d3adc1041a9b92e8978ab7078cc22bc60284561ce9a08b4c950c300eed94a9", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "4540f6ed-7c35-4508-b3a4-8750949caf6a", "node_type": "1", "metadata": {}, "hash": "b2becb9b88acc1024850d74e2202ba841f8e5cfd9e8087b90c685c4b61b55fc9", "class_name": "RelatedNodeInfo"}}, "text": "2. The PRU then controls the GPIOs\nto modulate the LED light for data transmission.\nAt the receiver, light signals are detected by the PD and\nsampled by the \ufb01rmware in the PRUs. Once a valid preamble\nand Start-Frame-Delimiter (SFD) are detected, received data\nis sent to the shared memory, and then received and processed\nby the OpenVLC driver. Finally, the received data is sent to\nthe network layer, where it is handled using the TPC/IP Linux\nkernel.\nB. Firmware\nThe \ufb01rmware of OpenVLC runs in the PRUs of the BBB,\nwhich operates at 200 MHz, meaning that each instruction\ntakes 5 ns. Each PRU has its own memory and a shared one\nbetween the two. The size of each memory of the PRUs is 8KB\nand the shared memory is 12KB. The reason behind adopting\nthe PRUs in OpenVLC is to increase the data rate and handle a\nhigher sampling frequency of the Analog-to-Digital Converter\n(ADC). Nevertheless, this effort also requires a tight timing\nprecision in both the modulation and sampling processes. For\nthis reason, assembly is used to program the PRU. In this way,\nthe code of the PRU has been designed to know the exact\nnumber of instructions executed and, subsequently, the time\nrequired to execute them. In addition, the memory space in\nthe PRU is very limited and this requires careful optimization\nof all instructions. Finally, there is no enough memory to\nimplement queues, and as such, the communication between\nthe PRU and upper layers must be handled carefully.\nC. Kernel Driver\nThe main objective of OpenVLC is to have a \ufb02exible,\nlow-cost and recon\ufb01gurable system for communication using\n1www.openvlc.org", "start_char_idx": 3606, "end_char_idx": 5213, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "4540f6ed-7c35-4508-b3a4-8750949caf6a": {"__data__": {"id_": "4540f6ed-7c35-4508-b3a4-8750949caf6a", "embedding": null, "metadata": {"page_label": "3", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "11ed9c2a-f2ea-40c1-b3c1-b03ab25da5ef", "node_type": "4", "metadata": {"page_label": "3", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "7addb7d331147161cb91678a3e12f8ab7ae503d148dd0d0f3a392468e7959210", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "3aee0895-63f9-439c-adbc-2ec859adc06c", "node_type": "1", "metadata": {"page_label": "2", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "4efa10e3f82760f64d92737527606acb6c594eb27628919fbd5736569c6a10bd", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f525e042-9417-45b3-8d43-b1764d12ecb1", "node_type": "1", "metadata": {}, "hash": "7299d37e2fdebbd4d8a056e622c76c078a6863c25de77e4ecb5c06974a058917", "class_name": "RelatedNodeInfo"}}, "text": "TABLE II: Frame format and sizes (in bytes).\nPreamble SFD Frame Length Dst. Address Src. address Payload Reed-Solomon\n3 1 2 2 2 0-MAX 16\nvisible light. In order to do so, OpenVLC1.3 has been designed\nto be as versatile and easy to use as possible. For this reason,\nwe have taken two design decisions:\n\u2022OpenVLC is mostly code-based and the use of VLC hard-\nware is as small as possible. This makes easy to modify\nthe behavior of the platform just by modifying the software\ncode, such as introducing new MAC protocols.\n\u2022OpenVLC should be easy to use and adaptable to most\nuse case scenarios. Taking this into account, OpenVLC\u2019s\ninterface has been designed as a Linux kernel module.\nThe OpenVLC kernel module allows us to create a network\ninterface. This means that any user will see the OpenVLC\nmodule as if it is just another network device such as Wi-\nFi or Ethernet and any application that we would like to run\nwould be connected through the VLC network interface. As\nthe kernel runs in the processor of the BBB, its processing\npower is much higher than the one of the PRU microcontroller.\nFor this reason, the most computationally demanding tasks are\nleft in the kernel.\nIII. T RANSMITTER\nIn this section we present all the different parts that allow\nOpenVLC to perform a VLC transmission.\nA. Kernel module for transmission\nWhen a user space application transmits data, \ufb01rst the packet\nis received from the IP layer of the kernel. After unwrapping\nthe frame, the driver prepares the header for the VLC MAC\nlayer. The frame structure is presented in Table II. Each frame\nstarts with a frame header that contains the following \ufb01elds:\npreamble, SFD, frame length, destination address and source\naddress. Each \ufb01eld in the MAC header (starting from the frame\nlength) can be freely modi\ufb01ed, for instance to adapt it to the\nIEEE 802.15.7-2011 standard for VLC [15] and upcoming\n802.11bb standard for integration with Wi-Fi [11].\nThe preamble consists of 24 alternating HIGH and LOW\nsymbols. After that, the SFD is appended to avoid false\npositives. The next \ufb01eld denotes the length of frame in bytes,\nfollowed by the destination and source addresses.\nWe use Reed-Solomon code to correct errors in the data\n\ufb01eld during the transmission. The bits for Reed-Solomon are\nappended to the frame. We use Reed-Solomon (216,200) error\ncorrection code in our default con\ufb01guration. Subsequently, we\nuse Manchester line encoding, which encodes one bit into two\nsymbols with On-Off-Keying (OOK) modulation (a symbol is\neither a HIGH or a LOW) and it ensures that the average\nsignal power remains constant. In particular, Manchester line\ncoding converts a 1 bit into a LOW-HIGH symbol pair and a\n0 into a HIGH-LOW. This is done to avoid \ufb02ickering. Both\nReed-Solomon code and Manchester encoding are also used\nin the 802.15.7-2011 standard [15]. Finally, the driver places\nthe VLC frame in a shared memory, so that the OpenVLC\n\ufb01rmware in the PRU can access it.\nPRU 0OpenVLC\ndriver\n#0123\u2026nSize: 8KB(a) Memory sharing\nbetween the Open-\nVLC driver and the\nPRU 0at the trans-\nmitter.\nPRU 0 PRU 1OpenVLC driver\n#0123\u2026n VLC Channel\n#0123\u2026nSize: 8KB\nSize: 12KB(b) Memory sharing between the PRUs and\nbetween PRU 1and the OpenVLC driver at the\nreceiver.\nFig. 3: Memory interface of OpenVLC1.3 (\u2018#\u2019 stores the\nphysical address of the latest updated data).\nB. Shared memory\nIn Fig. 3(a) we show how the shared memory is used in\nOpenVLC. The kernel driver transmit data to the PRU using a\nshared memory. The \ufb01rst 32-bits (referred as the \ufb01rst \u2018register\u2019\nin the rest of this paper) of the shared memory are the only\nspace where the PRU can write data.", "start_char_idx": 0, "end_char_idx": 3619, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f525e042-9417-45b3-8d43-b1764d12ecb1": {"__data__": {"id_": "f525e042-9417-45b3-8d43-b1764d12ecb1", "embedding": null, "metadata": {"page_label": "3", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "11ed9c2a-f2ea-40c1-b3c1-b03ab25da5ef", "node_type": "4", "metadata": {"page_label": "3", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "7addb7d331147161cb91678a3e12f8ab7ae503d148dd0d0f3a392468e7959210", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "4540f6ed-7c35-4508-b3a4-8750949caf6a", "node_type": "1", "metadata": {"page_label": "3", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "f0fdb156951c4c366a061d4e43ed438c15fd829d2b0fe7bb6bea00adb436260c", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "16e6fbed-d6be-4b09-ac65-707d9782d836", "node_type": "1", "metadata": {}, "hash": "cc998ff51e22fdfa64739d88dd5dd7e86235ad8e042199b271e7152e9c703991", "class_name": "RelatedNodeInfo"}}, "text": "B. Shared memory\nIn Fig. 3(a) we show how the shared memory is used in\nOpenVLC. The kernel driver transmit data to the PRU using a\nshared memory. The \ufb01rst 32-bits (referred as the \ufb01rst \u2018register\u2019\nin the rest of this paper) of the shared memory are the only\nspace where the PRU can write data. This register is used to\nexchange status \ufb02ags between the kernel and the PRU.\nThe communication works as follows: the PRU constantly\nreads the value of the \ufb01rst register. If it is zero, it reads it again\nin a loop, waiting for its value to change. If the kernel receives\ndata from upper layers, it will modulate it and put it the shared\nmemory. When it \ufb01nishes, it writes in the \ufb01rst memory address\nthe number of registers that the PRU should read. The kernel\nwill not be able to write into the shared memory again until the\nPRU \ufb01nishes the transmission. The PRU will then transmit the\ndata and once it \ufb01nishes, it changes the \ufb02ag in the \ufb01rst memory\nregister to zero so that the kernel knows that the memory is\navailable again.\nC. Firmware for signal transmission\nFor the transmission, the PRU is used for the sole purpose\nof emitting the visible light signal according to the pattern of\nHIGH and LOW symbols stored in the shared memory. Two\nPRUs are available in the BBB, and only one PRU is used for\ntransmitting the signal. We implement a counter to track the\ntime between symbols. When it reaches zero, a new symbol\nis transmitted. In order to transmit each symbol, a HIGH or\nLOW signal is sent through one of the pins of the BBB. In\nthe current implementation, HIGH corresponds to emitting the\nvisible light signal and LOW to not emitting any signal.\nD. Hardware improvement\nThe main purpose of the TX circuit is to take the signal\ngiven by the BBB and amplify it to turn the LED on/off.\nAs mentioned above, the HW is controlled using the \ufb01rmware\nimplemented in the BBB\u2019s PRUs. The HW used for the Open-\nVLC transmitter can be seen in Tab. III. We have improved the", "start_char_idx": 3327, "end_char_idx": 5290, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "16e6fbed-d6be-4b09-ac65-707d9782d836": {"__data__": {"id_": "16e6fbed-d6be-4b09-ac65-707d9782d836", "embedding": null, "metadata": {"page_label": "4", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a1f19592-40ec-4946-a0fb-56be50d3916a", "node_type": "4", "metadata": {"page_label": "4", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "4c0c9149850d8c783e263bbb6e8deb8a083aed5d520e9be3c84d97c394eb9eaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f525e042-9417-45b3-8d43-b1764d12ecb1", "node_type": "1", "metadata": {"page_label": "3", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "fd2541a5471406192775fb1d422e25572b795ec51b3fb0eec8b5352d1c0c036a", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f1f6b40e-1989-4d16-a720-6851d629727e", "node_type": "1", "metadata": {}, "hash": "d1d5857b4c7b79cdb537bf2b3bf15fe33ec5efdc9a247592063fd10922e97ff1", "class_name": "RelatedNodeInfo"}}, "text": "TABLE III: Main components of OpenVLC1.3.\nComponent Name\nADC ADS7883\nOP-AMP LTC6269\nMOSFET FQPF30N06L\nLED XHP35A-01-0000-0D0HC40E7CT\nLens TINA FA10645\nPD SFH206K\nDC-DC LM2585SX-ADJ\nTX circuit compared with previous versions mainly to support\na higher transmission rate and a larger communication range.\n\u2022Increase the transmission rate: we use a PRU at the TX\nto modulate the LED light at higher speeds. Moreover, we\nuse a MOSFET gate driver transistor to control the current\n\ufb02owing to the LED and support a faster switch.\n\u2022To expand the communication range: a LED that maximizes\nthe power supported by the transmission circuit, working\nat 2.8 W with a luminous \ufb02ux of 400 lm. A lens has\nbeen attached on top of the LED to better concentrate the\noptical power and thus, reach further distance. A heat-sink\nis attached to better dissipate the heat generated by the high-\npower LED.\nIV. R ECEIVER\nIn this section we explain the design and behavior of the RX.\nA. Hardware for reception\nIn the previous versions of OpenVLC, the bottleneck for\nthe throughput was the RX\u2019s sampling rate. In OpenVLC1.3,\nthis is solved partly by introducing a new faster photodiode\n(PD). This PD does not have its own amplifying circuit. Thus,\nwe add an external ampli\ufb01er to the RX. The PD\u2019s position in\nthe cape is also adjusted for a better detection of visible light.\nThe most important components are shown in Tab. III.\nThe bottleneck of the system for the transmission distance\non the reception circuit was the high sensitivity to noise on\nthe receiver circuit. For this reason, a reception chain has been\nadded between the PD and the ADC. In previous versions there\nwas only an ampli\ufb01cation stage between the PD and the ADC.\nIn this version, as seen in Fig. 4, the \ufb01rst ampli\ufb01cation stage\nis a low-noise Trans-Impedance-Ampli\ufb01er (TIA) that converts\nthe current of the PD into voltage.\nSubsequently, a high-pass \ufb01lter is used in order to remove\nthe low frequency components (specially the DC component\nfrom other illumination sources). The cut-off frequency of this\n\ufb01lter is 10 KHz. This \ufb01lter allows us to remove the DC light\ncomponent and other sources of interference. Although non-\nvisible for the human eye, a light \ufb02ickering at this frequency\nwould distort the VLC signals. After this, a DC component of\n2.5 V is added to the signal so that the signal is centered at\nhalf the span of the ADC. Then, the second ampli\ufb01cation stage\nprepares the signal for the dynamic range of the ADC. Finally,\nbefore the ADC, a low-pass \ufb01lter with cut-off frequency\nof 1.1 MHz removes the higher frequency noise components\nmainly due to overshooting of the ampli\ufb01ers.\nPhotodiode\n1st Amplificationstage 2nd AmplificationstageHigh passfilter Low passfilterFig. 4: Reception chain.\nB. Firmware for signal reception\nThe con\ufb01guration of the RX is more complex than of the\nTX. It requires two PRUs. One for handling the HW in a very\nprecise manner and another for processing the received signal.\nOne of them, PRU 0, performs signal sampling from the\nADC and obtains the Received Signal Strength (RSS) and\nsends it to the other PRU, PRU 1, that handles signal detection\nand the process of converting the raw signal into bits. PRU 0\nreads the RSSs from the ADC at a frequency higher than twice\nthe symbol rate.\nThen, the raw value from the channel is shared with PRU 1.\nPRU 1interprets the RSSs into symbols for frame detection.\nPRU 1continuously checks if a new RSS has been read by\nPRU 0. If yes, PRU 1processes it immediately.\n1) The bit slip problem: One of the most sensitive stages in\na communication system is the correct reception of transmitted\nsymbols. One of the main problems with low-cost systems\nis that TX and RX get easily desynchronized over time.", "start_char_idx": 0, "end_char_idx": 3724, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f1f6b40e-1989-4d16-a720-6851d629727e": {"__data__": {"id_": "f1f6b40e-1989-4d16-a720-6851d629727e", "embedding": null, "metadata": {"page_label": "4", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "a1f19592-40ec-4946-a0fb-56be50d3916a", "node_type": "4", "metadata": {"page_label": "4", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "4c0c9149850d8c783e263bbb6e8deb8a083aed5d520e9be3c84d97c394eb9eaf", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "16e6fbed-d6be-4b09-ac65-707d9782d836", "node_type": "1", "metadata": {"page_label": "4", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "34e47db1123c9e29f48609fb34efd474aec756062f2523f110696f6a72cb789d", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "338880ae-6b5c-4e12-b647-afad0bdf4348", "node_type": "1", "metadata": {}, "hash": "3c1c31db3437237421ccdac306628b896de616aa3177393ff4ed8a6f5f8f0903", "class_name": "RelatedNodeInfo"}}, "text": "PRU 1interprets the RSSs into symbols for frame detection.\nPRU 1continuously checks if a new RSS has been read by\nPRU 0. If yes, PRU 1processes it immediately.\n1) The bit slip problem: One of the most sensitive stages in\na communication system is the correct reception of transmitted\nsymbols. One of the main problems with low-cost systems\nis that TX and RX get easily desynchronized over time.\nTheir clocks are not exactly the same and the frequencies\nat which they run are slightly different. This could make\nthe system sample a symbol twice or miss a symbol. This\nproblem is known as \u201cbit slip\u201d [16]. In the older OpenVLC1.2,\nthe TX and RX frequency were adjusted to the instruction\nlevel. This meant that there are exactly the same number of\ninstructions between two symbols transmission and between\ntwo symbols reading. However, the clocks in the TX and RX\nalways run at slightly differently frequency, and thus, part of\nthe synchronization problems was still present.\nIn order to solve this problem, we need to make sure that:\n\u2022All the symbols are sampled at least twice.\n\u2022The system should detect if a symbol has been sampled\nmore than twice.\nOpenVLC1.3 over-samples the signal to assure that all the\nsymbols are sampled at least twice. The higher the oversam-\npling rate, the more information the system is going to have to\ndetect the symbol correctly. Nevertheless, a high oversampling\nrate requires a fast processing. In our case, in order to ful\ufb01ll\nthe requirements mentioned above, the sampling frequency\nfsampling should be:\n2fsymbol < f sampling <3fsymbol (1)\nWith this con\ufb01guration, OpenVLC1.3 makes sure that we\nalways receive at least 2 sample per symbol and a maximum\nof 3. It is not possible to receive 4 samples per symbol,\nwhich is necessary to assure the second condition. In the\nimplementation, we modulate at 1 MHz and sample at the\nreceiver at a rate of 2.1 MHz.\nThe symbol detection in OpenVLC1.2 was just a threshold-\ning algorithm with one sample per symbol with the consequent", "start_char_idx": 3330, "end_char_idx": 5335, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "338880ae-6b5c-4e12-b647-afad0bdf4348": {"__data__": {"id_": "338880ae-6b5c-4e12-b647-afad0bdf4348", "embedding": null, "metadata": {"page_label": "5", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26", "entities": ["Manchester"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b63b5730-ccf2-4b70-9b23-1ee763ba1ef2", "node_type": "4", "metadata": {"page_label": "5", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "7c97b64e1635c3d48ea5b3d46cb486f1edb20c737f1d28fb777ba54ae98ebc15", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f1f6b40e-1989-4d16-a720-6851d629727e", "node_type": "1", "metadata": {"page_label": "4", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "387f1f76a1a548690c4d24efbd16c957473a809b7aa446b418a8fab68929bea4", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "10b3905b-50ba-48cd-b051-70aeb99be6a6", "node_type": "1", "metadata": {}, "hash": "e2cb1fb7ded7a24681bd6b461f920a53476f14fec1a3ce80c50d92c573a69a3a", "class_name": "RelatedNodeInfo"}}, "text": "(a) 1 sample per symbol (sym-\nbol lost).\n(b) 2 sample per symbol (no\nsymbol lost).\nFig. 5: Bit sleep problem. The red circles represent the ideal\nsampling time. The grey stars represent the real sampling time\ngiven by the drift.\nbit sleep problem. In OpenVLC1.3, we avoid this by using\na pseudo-edge detection algorithm. Manchester modulation\nconverts a 1 bit into a LOW-HIGH symbol pair and a 0\ninto a HIGH-LOW. This means that the maximum number\nof symbols with the same value is 2. There cannot be more\nthan 2 consecutive HIGHs or LOWs. With two samples per\nsymbol, the system makes sure to read at least each symbol\ntwice, at it can be seen in Fig. 5.\nOpenVLC1.3 can count the number of samples with the\nsame value. If the number of samples is 2 or 3, only 1 symbol\nhas been received. If the number of samples is 4 or 5, 2\nsymbols have been received. This method can be thought as\na very simple and rudimentary edge detection system, as it\nlooks for changes in the signal to see when a new symbol (or\npair of symbols with the same value, depending on how long\nago was the last change in the signal) has been received.\n2) Frame detection: The system assumes that a new frame\nis being detected when the last samples received correspond\nto the preamble + SFD. The frame detection technique is the\none used in OpenVLC1.2 [13] as it showed to be both low-\ncomplexity in processing (required by our application) and\nvery effective. This technique works as follows: First, the RSS\nvalues read are compared with their previous values. Because\nat the beginning of a frame in the preamble (0xAAAAAA)\nevery HIGH is between two LOWs and every LOWs between\ntwo HIGHs, every symbol is different from the previous one.\nIf the value of the last 24 bits received is not the same as the\npreamble, the system continues to collect samples. If it does,\ncontinues receiving data.\nOnce the preamble is detected it continues receiving the rest\nof the frame. Once received and demodulated, the data is sent\nto the OpenVLC driver for further processing.\n3) Communication between PRUs: The signal reception\nstarts with the PRU 0reading values from the ADC and putting\nthem in a memory shared by both PRUs. This memory is used\nas a circular memory. When it reaches the end, it continues\n\ufb01lling the beginning of the shared memory. In the \ufb01rst register,\nthe address of the latest memory where data has been written\nis stored as illustrated in Fig. 3(b). In this way, PRU 1is able to\nkeep track of the RSS obtained by PRU 0in real time. Then, the\nPRU 1processes the samples taking two symbols at a time, to\ndetermine if the encoded Manchester bit is a 1 or a 0. If they\ncontain valid data, it is decoded and shared with the kernel\nusing the same process as for the transmitter.C. Kernel for reception\nThe frame is received by the kernel after being converted\nfrom symbols to bits in the PRU. The Reed-Solomon code is\nchecked with three possible outputs:\n\u2022The Reed-Solomon reports no errors, so the packet is\nforwarded.\n\u2022The Reed-Solomon shows some errors that is able to correct,\nso corrects them and forwards the packet.\n\u2022The Reed-Solomon code shows that there are too many\nerrors, so discards the packet.\nIf the packet is forwarded, the kernel encapsulates the packet\nso that upper layers can manage it.\nBoth in the transmission and in the reception of packets,\nOpenVLC considers that, although more powerful, the kernel\ncannot run in real time. For this reason, two driver queues\nare implemented, one for transmission and one for reception.\nEvery incoming packet that arrives to the kernel is queued\nand transmitted to the PRU or to upper layers as soon as\nthe resources are available. In this way, we minimize the\nlikelihood of losing a frame because the CPU is occupied.\nV. E VALUATION\nIn this section we evaluate the performance of OpenVLC1.3.\nA. Reception chain\nIn order to understand the behavior of the reception chain\nwe have measured the raw signal with an oscilloscope.", "start_char_idx": 0, "end_char_idx": 3954, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "10b3905b-50ba-48cd-b051-70aeb99be6a6": {"__data__": {"id_": "10b3905b-50ba-48cd-b051-70aeb99be6a6", "embedding": null, "metadata": {"page_label": "5", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "b63b5730-ccf2-4b70-9b23-1ee763ba1ef2", "node_type": "4", "metadata": {"page_label": "5", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "7c97b64e1635c3d48ea5b3d46cb486f1edb20c737f1d28fb777ba54ae98ebc15", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "338880ae-6b5c-4e12-b647-afad0bdf4348", "node_type": "1", "metadata": {"page_label": "5", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "e7e42c3b0f88eb226b0e21dd54530f2042b8fe9497d5c4561e58174e48f75622", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "f80df12a-2186-4f6d-bde8-40afd0b02910", "node_type": "1", "metadata": {}, "hash": "44b315ace5eb29c07bcbc08f40b962a740e90aec2a4cdb7d923fa3097dffcfc1", "class_name": "RelatedNodeInfo"}}, "text": "Every incoming packet that arrives to the kernel is queued\nand transmitted to the PRU or to upper layers as soon as\nthe resources are available. In this way, we minimize the\nlikelihood of losing a frame because the CPU is occupied.\nV. E VALUATION\nIn this section we evaluate the performance of OpenVLC1.3.\nA. Reception chain\nIn order to understand the behavior of the reception chain\nwe have measured the raw signal with an oscilloscope. As it\ncan be seen in Fig. 6, the signal is noisy and small after the\n\ufb01rst ampli\ufb01er. Then, the signal is \ufb01ltered and centered around\nthe center of the ADC\u2019s span. Finally, the signal is ampli\ufb01ed\nand cleaned, to improve the reception.\nB. Throughput vs. payload\n1) Setup: We use two OpenVLC1.3 nodes, one as TX\nand the other as a RX. Since OpenVLC1.3 provides a new\nnetwork interface that can be easily accessed by upper layer\napplications, we use the tool iperf to evaluate the UDP\nperformance of OpenVLC1.3.\n2) Results: The \ufb01rst test performed is to see how the system\nworks depending on its payload. In previous versions of\nOpenVLC, the payload had a huge impact in the system. If the\npayload was too short, the overhead due to the physical layer\nheaders was too big, decreasing the throughput. Nevertheless,\nif the payload was too big, the reception was desynchronized\nand the frame lost. As we modify the symbol detection\ntechnique, now no frames are lost due to the size of the\npayload. For this reason, the bigger the payload, the better.\nAll the following tests are done with payloads of 800 bytes.\nThroughput vs. distance. This test contains the two most\nimportant parameters regarding VLC. The \ufb01rst one is the\ndistance at which the VLC communication takes place. The\nsecond one is the maximum throughput achievable by the\nsystem. OpenVLC has been tested over distance under 3\ndifferent scenarios. In the \ufb01rst one, the system has been\ndeployed in a realistic scenario with no arti\ufb01cial lights on (here\nOpenVLC is seen as the primary illumination source), but with", "start_char_idx": 3517, "end_char_idx": 5524, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "f80df12a-2186-4f6d-bde8-40afd0b02910": {"__data__": {"id_": "f80df12a-2186-4f6d-bde8-40afd0b02910", "embedding": null, "metadata": {"page_label": "6", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26", "entities": ["Time"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f02a34b-0f43-4a2e-b61f-4a4f2a4cdb8d", "node_type": "4", "metadata": {"page_label": "6", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "6a4f453e1ffb30a1c315925ef8d5441dec35ecd6c6bf9ca794b34ac81efc1081", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "10b3905b-50ba-48cd-b051-70aeb99be6a6", "node_type": "1", "metadata": {"page_label": "5", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "ad872778acaf2d58ba1a8ac29611e72523e3b8267e4d73bd4dd8cbecb418e292", "class_name": "RelatedNodeInfo"}, "3": {"node_id": "04f893dc-fdce-4090-90be-7b94a1c839b3", "node_type": "1", "metadata": {}, "hash": "81bcd20dd699750e91a0f6b4ade537504e2581ff3bf89df0489f61226d619ff9", "class_name": "RelatedNodeInfo"}}, "text": "0 1 2 3 4 5\nTime (s)10-60.20.40.60.81Voltage (V)\n0 1 2 3 4 5\nTime (s)10-62.32.42.52.62.72.8Voltage (V)\n0 1 2 3 4 5\nTime (s)10-61234Voltage (V)Fig. 6: Received signal after the \ufb01rst ampli\ufb01er (left), after the high-pass \ufb01lter (center) and at the entrance of the ADC (right).\n0 2000 4000 6000 8000\nDistance (mm)0100200300400Throughput (kb/s)W. open\nW. closed\nInterference\nFig. 7: UDP throughput as a function of the distance.\nthe windows open during the day (\u201cW. open\u201d). In the second\none, OpenVLC is tested without any external light interference\nand the window shutter closed (\u201cW. closed\u201d). In the last one,\nwe open the windows, and we add an arti\ufb01cial \ufb02uorescent light\nsource with frequency components that enter in the frequency\nband of the OpenVLC receiver (\u201cInterference\u201d).\nAs it can be seen in Fig. 7, the maximum throughput that\nOpenVLC achieves is 400 kb/s. Until 3.5 meters, the difference\nbetween being in a completely dark environment (\u201cW. closed\u201d)\nand with external light (\u201cW. open\u201d) is negligible, which did not\nhappen in previous versions. This is due to the \ufb01lters added\nin the reception chain. Then, at 3.5 meters the intensity of\nthe external light level becomes similar to transmitted light,\nmaking it more dif\ufb01cult for the ADC to differentiate between\nHIGH and LOW symbols, so the throughput starts to drop.\nWhen the windows are closed, the communication is possible\nat longer range, reaching 6 meters.\nIn summary, the maximum achievable distance is more than\nthree times better than the previous version and 6 times better\nthan the original one. Also, the throughput is 4 times better\nthan the previous version and more than 22 times better than\nthe \ufb01rst version [12] [13].\nVI. L IMITATIONS OF THE SYSTEM\nThe OpenVLC1.3 platform has several limitations, as any\nreal system. The \ufb01rst one is that the throughput can not\nbe improved without major changes in both software and\nhardware. Changing the ADC would increase the cost of\nthe board and the processing power required to perform the\nreception. Also, although technically possible to use OpenVLC\nas a transceiver, in the current version, the throughput is\nmaximized using one board as transmitter and one as receiver.\nIn addition, the communication is UDP, as there is no return\nVLC link in the system. This design decision has been taken\nafter realizing that:\u2022The processing power of the BBB\u2019s PRUs is limited, and\nhaving a bidirectional system requires at least twice as\nprocessing power as an one-way link.\n\u2022The current trend in networking is that VLC will operate in\nhybrid systems, where the downlink is VLC and the uplink\nis RF. By using the USB interface in the BBB, users may,\nfor instance, use Wi-Fi to send uplink data as well as ACKs\nfor downlink VLC.\nVII. C ONCLUSION\nIn this paper, we have presented our latest OpenVLC version\nand we have evaluated its performance improvements. To\nthe best of our knowledge, OpenVLC1.3 is the \ufb01rst low-\ncost research platform that achieves a UDP throughput of\n400 kb/s using only low-end off-the-shelf hardware. Apart\nfrom being used for research and teaching as its predecessors,\nOpenVLC1.3 can enable real-world applications.\nREFERENCES\n[1] \u201cpureLiFi,\u201d https://pureli\ufb01.com/ , 2018.\n[2] J. Zhang, X. Zhang, and G. Wu, \u201cDancing with light: Predictive in-frame\nrate selection,\u201d in Proc. IEEE INFOCOM , 2015, pp. 1\u20139.\n[3] C. B. Liu, B. Sadeghi, and E. W. Knightly, \u201cEnabling vehicular visible\nlight communication (V2LC) networks,\u201d in Proc. VANET , 2011.", "start_char_idx": 0, "end_char_idx": 3468, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}, "04f893dc-fdce-4090-90be-7b94a1c839b3": {"__data__": {"id_": "04f893dc-fdce-4090-90be-7b94a1c839b3", "embedding": null, "metadata": {"page_label": "6", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26", "entities": ["G. Wu", "T. Li", "X. Zhou", "E. W. Knightly", "X. Zhang", "B. Sadeghi", "C. An", "A. T. Campbell", "J. Zhang", "Z. Tian", "C. B. Liu"]}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "4f02a34b-0f43-4a2e-b61f-4a4f2a4cdb8d", "node_type": "4", "metadata": {"page_label": "6", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "6a4f453e1ffb30a1c315925ef8d5441dec35ecd6c6bf9ca794b34ac81efc1081", "class_name": "RelatedNodeInfo"}, "2": {"node_id": "f80df12a-2186-4f6d-bde8-40afd0b02910", "node_type": "1", "metadata": {"page_label": "6", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}, "hash": "ff2f3caa6e5b81176f320ac5f71e17cf8cb3ffa26f7cea012a2964fa77db0d7c", "class_name": "RelatedNodeInfo"}}, "text": "[2] J. Zhang, X. Zhang, and G. Wu, \u201cDancing with light: Predictive in-frame\nrate selection,\u201d in Proc. IEEE INFOCOM , 2015, pp. 1\u20139.\n[3] C. B. Liu, B. Sadeghi, and E. W. Knightly, \u201cEnabling vehicular visible\nlight communication (V2LC) networks,\u201d in Proc. VANET , 2011.\n[4] T. Li, C. An, Z. Tian, A. T. Campbell, and X. Zhou, \u201cHuman sensing\nusing visible light communication,\u201d in ACM MobiCom , 2015.\n[5] N. O. Tippenhauer, D. Giustiniano, and S. Mangold, \u201cToys communi-\ncating with leds: Enabling toy cars interaction,\u201d in IEEE CCNC , 2012.\n[6] C. Zhang, J. Tabor, J. Zhang, and X. Zhang, \u201cExtending mobile\ninteraction through near-\ufb01eld visible light sensing,\u201d in Proc. MobiCom .\nACM, 2015, pp. 345\u2013357.\n[7] Y .-S. Kuo, P. Pannuto, K.-J. Hsiao, and P. Dutta, \u201cLuxapose: Indoor\npositioning with mobile phones and visible light,\u201d in Proc. MobiCom .\nACM, 2014, pp. 447\u2013458.\n[8] C. Zhang and X. Zhang, \u201cLitell: robust indoor localization using un-\nmodi\ufb01ed light \ufb01xtures,\u201d in Proc. 22nd Annual International Conference\non Mobile Computing and Networking . ACM, 2016, pp. 230\u2013242.\n[9] Q. Wang, M. Zuniga, and D. Giustiniano, \u201cPassive communication with\nambient light,\u201d in ACM CoNEXT , 2016.\n[10] X. Xu, Y . Shen, J. Yang, C. Xu, G. Shen, G. Chen, and Y . Ni, \u201cPas-\nsiveVLC: Enabling Practical Visible Light Backscatter Communication\nfor Battery-free IoT Applications,\u201d in ACM MobiCom , 2017.\n[11] \u201c802.11bb,\u201d https://standards.ieee.org/develop/project/802.11bb.html ,\n2018.\n[12] Q. Wang, D. Giustiniano, and D. Puccinelli, \u201cOpenVLC: Software-\nDe\ufb01ned Visible Light Embedded Networks,\u201d in ACM VLCS , 2014.\n[13] A. Galisteo, D. Juara, Q. Wang, and D. Giustiniano, \u201cOpenvlc1.2:\nAchieving higher throughput in low-end visible light communication\nnetworks,\u201d in 2018 14th Annual Conference on Wireless On-demand\nNetwork Systems and Services (WONS) , Feb 2018, pp. 117\u2013120.\n[14] \u201cBeagleBone Black,\u201d http://beagleboard.org/Products/BeagleBone+Black ,\n2018.\n[15] \u201cIEEE 802.15.7-2011 - IEEE Standard for Local and Metropolitan Area\nNetworks\u2013Part 15.7: Short-Range Wireless Optical Communication Us-\ning Visible Light,\u201d https://standards.ieee.org/standard/802 157-2011.\nhtml, 2011.\n[16] O. Jung and C. Ruland, \u201cAnalysis of the statistical self-synchronization\nmode of operation,\u201d ITG FACHBERICHT , pp. 119\u2013126, 2004.", "start_char_idx": 3201, "end_char_idx": 5497, "text_template": "[Excerpt from document]\n{metadata_str}\nExcerpt:\n-----\n{content}\n-----\n", "metadata_template": "{key}: {value}", "metadata_seperator": "\n", "class_name": "TextNode"}, "__type__": "1"}}, "docstore/metadata": {"8d83a592-1e20-4d06-aeed-021774e0c3c1": {"doc_hash": "a660cfbf9ec00c1115f2c5537082a6e88f324b6c51c7e8e1835875344ea5b97e", "ref_doc_id": "eb62c087-6ef0-4964-a177-1a76ca8983ac"}, "fd8fb939-c39c-4415-8f65-27acc70f0e06": {"doc_hash": "eb509ea899e9873b97ac8cf34c508ebdba9d7449bd4d33266a32b31419101455", "ref_doc_id": "eb62c087-6ef0-4964-a177-1a76ca8983ac"}, "3def7107-83d9-4bf2-abc7-357bb05b18d1": {"doc_hash": "206e71ee635634b4cab61b41cf4b2457b9b7f0ca0807ab2c5171b953c49a8a01", "ref_doc_id": "476df8c0-b694-4ffe-a394-9089b165ac70"}, "3aee0895-63f9-439c-adbc-2ec859adc06c": {"doc_hash": "4efa10e3f82760f64d92737527606acb6c594eb27628919fbd5736569c6a10bd", "ref_doc_id": "476df8c0-b694-4ffe-a394-9089b165ac70"}, "4540f6ed-7c35-4508-b3a4-8750949caf6a": {"doc_hash": "f0fdb156951c4c366a061d4e43ed438c15fd829d2b0fe7bb6bea00adb436260c", "ref_doc_id": "11ed9c2a-f2ea-40c1-b3c1-b03ab25da5ef"}, "f525e042-9417-45b3-8d43-b1764d12ecb1": {"doc_hash": "fd2541a5471406192775fb1d422e25572b795ec51b3fb0eec8b5352d1c0c036a", "ref_doc_id": "11ed9c2a-f2ea-40c1-b3c1-b03ab25da5ef"}, "16e6fbed-d6be-4b09-ac65-707d9782d836": {"doc_hash": "34e47db1123c9e29f48609fb34efd474aec756062f2523f110696f6a72cb789d", "ref_doc_id": "a1f19592-40ec-4946-a0fb-56be50d3916a"}, "f1f6b40e-1989-4d16-a720-6851d629727e": {"doc_hash": "387f1f76a1a548690c4d24efbd16c957473a809b7aa446b418a8fab68929bea4", "ref_doc_id": "a1f19592-40ec-4946-a0fb-56be50d3916a"}, "338880ae-6b5c-4e12-b647-afad0bdf4348": {"doc_hash": "c35a5a9edd4975f96d9f14d7282f8b7efc6a4f6507b1d9fae423d5a9938eff86", "ref_doc_id": "b63b5730-ccf2-4b70-9b23-1ee763ba1ef2"}, "10b3905b-50ba-48cd-b051-70aeb99be6a6": {"doc_hash": "ad872778acaf2d58ba1a8ac29611e72523e3b8267e4d73bd4dd8cbecb418e292", "ref_doc_id": "b63b5730-ccf2-4b70-9b23-1ee763ba1ef2"}, "f80df12a-2186-4f6d-bde8-40afd0b02910": {"doc_hash": "c7be8f7f02c612ea19f6c459d2cb0c0ec7033d67c01ac4c02227a5ec4f415d2a", "ref_doc_id": "4f02a34b-0f43-4a2e-b61f-4a4f2a4cdb8d"}, "04f893dc-fdce-4090-90be-7b94a1c839b3": {"doc_hash": "0f5ca118de1cd8f9fb830c3832c8e0093506164e55aa9146e04b8b98f58cdf25", "ref_doc_id": "4f02a34b-0f43-4a2e-b61f-4a4f2a4cdb8d"}}, "docstore/ref_doc_info": {"eb62c087-6ef0-4964-a177-1a76ca8983ac": {"node_ids": ["8d83a592-1e20-4d06-aeed-021774e0c3c1", "fd8fb939-c39c-4415-8f65-27acc70f0e06"], "metadata": {"page_label": "1", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26", "entities": ["IMDEA Networks Institute Madrid", "Visible Light Communication Systems", "Spain"]}}, "476df8c0-b694-4ffe-a394-9089b165ac70": {"node_ids": ["3def7107-83d9-4bf2-abc7-357bb05b18d1", "3aee0895-63f9-439c-adbc-2ec859adc06c"], "metadata": {"page_label": "2", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26", "entities": ["High Power LED Kernel"]}}, "11ed9c2a-f2ea-40c1-b3c1-b03ab25da5ef": {"node_ids": ["4540f6ed-7c35-4508-b3a4-8750949caf6a", "f525e042-9417-45b3-8d43-b1764d12ecb1"], "metadata": {"page_label": "3", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}}, "a1f19592-40ec-4946-a0fb-56be50d3916a": {"node_ids": ["16e6fbed-d6be-4b09-ac65-707d9782d836", "f1f6b40e-1989-4d16-a720-6851d629727e"], "metadata": {"page_label": "4", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26"}}, "b63b5730-ccf2-4b70-9b23-1ee763ba1ef2": {"node_ids": ["338880ae-6b5c-4e12-b647-afad0bdf4348", "10b3905b-50ba-48cd-b051-70aeb99be6a6"], "metadata": {"page_label": "5", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26", "entities": ["Manchester"]}}, "4f02a34b-0f43-4a2e-b61f-4a4f2a4cdb8d": {"node_ids": ["f80df12a-2186-4f6d-bde8-40afd0b02910", "04f893dc-fdce-4090-90be-7b94a1c839b3"], "metadata": {"page_label": "6", "file_name": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_path": "/home/ubuntu/VLC/Demo1_ Video Transmission Using Low-Cost Visible Light Communication-submitted.pdf", "file_type": "application/pdf", "file_size": 1862294, "creation_date": "2024-03-26", "last_modified_date": "2024-03-26", "entities": ["Time"]}}}}